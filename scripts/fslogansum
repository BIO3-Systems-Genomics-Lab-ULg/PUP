#!/bin/bash
################################################################################
# Summarize FreeSurfer Based PET loganREF ROI analysis			       #
#                                   				               #
# USAGE:								       #
#	fslogansum petid roisfn loganpostfix sumpostfix                        #
#	petid:	petid is a string associated with the file name PET data in    #
#               4dfp format.						       #
#	roisfn:	the text file that lists ROIs to be reported                   #
#	loganpostfix: postfix for the mdl file, standard postfix is ".mdl", it #
#		      could have extra strings, for example the postfix for an #
#		      RSF corrected tac is "_RSF.mdl". The bp file for a     #
#		      specific ROI and dataset would follow the naming	       #
#		      convention: ${petid}_${ROINAME}${loganpostfix}	       #
#	sumpostfix:  postfix for the output file, standard postfix is	       #
#		     ".txt", it could have extra strings, for example the      #
#		     postfix for an RSF corrected opt is "_RSF.txt". 	       #
#		     The opt file follow the naming convention: 	       #
#				${petid}_LOGAN${sumpostfix}		       #
#			and	${petid}_LOGAN${sumpostfix}		       #
#									       #
# The output of this program is a text file that summarizes the modeling       #
# outputs								       #
################################################################################
# Yi Su, 01/08/2014

idstr='$Id: fslogansum,v 1.0 2014/01/08 18:07:48 suy Exp $'

echo $idstr

program=`basename $0`

if [ $# -lt 4 ]
then
	echo "Usage: $program petid roisfn loganpostfix sumpostfix"
	exit -1
fi

petid=$1
roisfn=$2
loganpostfix=$3
sumpostfix=$4

optfn=${petid}_LOGAN${sumpostfix}
optlrfn=${petid}_LOGANLR${sumpostfix}
###############################################################################
nline=`wc -l $roisfn | gawk '{print $1}'`

printf "%-35s %11s %11s %11s %11s\n" Structure_Name NVox BP R^2 Intc> $optfn
printf "%-35s %11s %11s %11s %11s\n" Structure_Name NVox BP R^2 Intc > $optlrfn

for (( i=1; i<=$nline; i++ ))
do
	ROI=`gawk 'NR=='$i' {print $1}'  $roisfn`
	flag=`gawk 'NR=='$i' {print $2}'  $roisfn`
	if (( $flag == 1 )) # ROIs with the naming convention Left/Right-${ROI}
	then
		lfn=${petid}_Left-${ROI}${loganpostfix}
		if [ -e $lfn ]
		then
			lnv=`gawk 'NR==3 {print $2}'  $lfn`
			lbp=`gawk 'NR==3 {print $3}'  $lfn`
			lrsq=`gawk 'NR==3 {print $4}'  $lfn`
			lintc=`gawk 'NR==3 {print $5}'  $lfn`
		else
			lnv=0
			lbp=0
			lrsq=0
			lintc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" Left-${ROI} $lnv $lbp $lrsq $lintc>> $optlrfn

		rfn=${petid}_Right-${ROI}${loganpostfix}
		if [ -e $rfn ]
		then
			rnv=`gawk 'NR==3 {print $2}'  $rfn`
			rbp=`gawk 'NR==3 {print $3}'  $rfn`
			rrsq=`gawk 'NR==3 {print $4}'  $rfn`
			rintc=`gawk 'NR==3 {print $5}'  $rfn`
		else
			rnv=0
			rbp=0
			rrsq=0
			rintc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" Right-${ROI} $rnv $rbp $rrsq $rintc>> $optlrfn

		bp=$(echo "scale=6; ($lbp*$lnv+$rbp*$rnv)/($lnv+$rnv+.0001)" | bc)
		(( nv=$lnv+$rnv ))
		rsq=$(echo "scale=6; ($lrsq*$lnv+$rrsq*$rnv)/($lnv+$rnv+.0001)" | bc)
		intc=$(echo "scale=6; ($lintc*$lnv+$rintc*$rnv)/($lnv+$rnv+.0001)" | bc)
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" ${ROI} $nv $bp $rsq $intc >> $optfn

	elif (( $flag == 0 ))
	then
		fn=${petid}_${ROI}${loganpostfix}
		if [ -e $fn ]
		then
			nv=`gawk 'NR==3 {print $2}'  $fn`
			bp=`gawk 'NR==3 {print $3}'  $fn`
			rsq=`gawk 'NR==3 {print $4}'  $fn`
			intc=`gawk 'NR==3 {print $5}'  $fn`
		else
			nv=0
			bp=0
			rsq=0
			intc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" ${ROI} $nv $bp $rsq $intc >> $optfn
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" ${ROI} $nv $bp $rsq $intc >> $optlrfn

	elif (( $flag == 2 ))
	then
		# Cortical Gray
		lfn=${petid}"_ctx-lh-"${ROI}${loganpostfix}
		if [ -e $lfn ]
		then
			lnv=`gawk 'NR==3 {print $2}'  $lfn`
			lbp=`gawk 'NR==3 {print $3}'  $lfn`
			lrsq=`gawk 'NR==3 {print $4}'  $lfn`
			lintc=`gawk 'NR==3 {print $5}'  $lfn`
		else
			lnv=0
			lbp=0
			lrsq=0
			lintc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" ctx-lh-${ROI} $lnv $lbp $lrsq $lintc>> $optlrfn

		rfn=${petid}"_ctx-rh-"${ROI}${loganpostfix}
		if [ -e $rfn ]
		then
			rnv=`gawk 'NR==3 {print $2}'  $rfn`
			rbp=`gawk 'NR==3 {print $3}'  $rfn`
			rrsq=`gawk 'NR==3 {print $4}'  $rfn`
			rintc=`gawk 'NR==3 {print $5}'  $rfn`
		else
			rnv=0
			rbp=0
			rrsq=0
			rintc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" ctx-rh-${ROI} $rnv $rbp $rrsq $rintc>> $optlrfn

		bp=$(echo "scale=6; ($lbp*$lnv+$rbp*$rnv)/($lnv+$rnv+.0001)" | bc)
		rsq=$(echo "scale=6; ($lrsq*$lnv+$rrsq*$rnv)/($lnv+$rnv+.0001)" | bc)
		intc=$(echo "scale=6; ($lintc*$lnv+$rintc*$rnv)/($lnv+$rnv+.0001)" | bc)
		(( nv=$lnv+$rnv ))
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" ctx-${ROI} $nv $bp $rsq $intc>> $optfn
		
		# Cortical White
		lfn=${petid}"_wm-lh-"${ROI}${loganpostfix}
		if [ -e $lfn ]
		then
			lnv=`gawk 'NR==3 {print $2}'  $lfn`
			lbp=`gawk 'NR==3 {print $3}'  $lfn`
			lrsq=`gawk 'NR==3 {print $4}'  $lfn`
			lintc=`gawk 'NR==3 {print $5}'  $lfn`
		else
			lnv=0
			lbp=0
			lrsq=0
			lintc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" wm-lh-${ROI} $lnv $lbp $lrsq $lintc >> wmlr$$.txt

		rfn=${petid}"_wm-rh-"${ROI}${loganpostfix}
		if [ -e $rfn ]
		then
			rnv=`gawk 'NR==3 {print $2}'  $rfn`
			rbp=`gawk 'NR==3 {print $3}'  $rfn`
			rrsq=`gawk 'NR==3 {print $4}'  $rfn`
			rintc=`gawk 'NR==3 {print $5}'  $rfn`
		else
			rnv=0
			rbp=0
			rrsq=0
			rintc=0
		fi
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" wm-rh-${ROI} $rnv $rbp $rrsq $rintc >> wmlr$$.txt

		bp=$(echo "scale=6; ($lbp*$lnv+$rbp*$rnv)/($lnv+$rnv+.0001)" | bc)
		rsq=$(echo "scale=6; ($lrsq*$lnv+$rrsq*$rnv)/($lnv+$rnv+.0001)" | bc)
		intc=$(echo "scale=6; ($lintc*$lnv+$rintc*$rnv)/($lnv+$rnv+.0001)" | bc)
		(( nv=$lnv+$rnv ))
		printf "%-35s %11d %11.4f %11.4f %11.4f\n" wm-${ROI} $nv $bp $rsq $intc >> wm$$.txt
	fi
done
cat wm$$.txt >> $optfn
cat wmlr$$.txt >> $optlrfn
rm wm$$.txt
rm wmlr$$.txt


# Calculate MCBP

# GR
n1=`gawk '/ctx-lateralorbitofrontal/ {print $2}' $optfn`
v1=`gawk '/ctx-lateralorbitofrontal/ {print $3}' $optfn`
rsq1=`gawk '/ctx-lateralorbitofrontal/ {print $4}' $optfn`
intc1=`gawk '/ctx-lateralorbitofrontal/ {print $5}' $optfn`

n2=`gawk '/ctx-medialorbitofrontal/ {print $2}' $optfn`
v2=`gawk '/ctx-medialorbitofrontal/ {print $3}' $optfn`
rsq2=`gawk '/ctx-medialorbitofrontal/ {print $4}' $optfn`
intc2=`gawk '/ctx-medialorbitofrontal/ {print $5}' $optfn`

nv=$(echo "scale=8; $n1+$n2" | bc)
bp=$(echo "scale=8; $v1*$n1/$nv+$v2*$n2/$nv" | bc)
rsq=$(echo "scale=8; $rsq1*$n1/$nv+$rsq2*$n2/$nv" | bc)
intc=$(echo "scale=8; $intc1*$n1/$nv+$intc2*$n2/$nv" | bc)
 
printf "%-35s %11d %11.4f %11.4f %11.4f\n" GR_FS $nv $bp $rsq $intc >> $optfn
N=$nv
MC=$bp


# TEMP
n1=`gawk '/ctx-middletemporal/ {print $2}' $optfn`
v1=`gawk '/ctx-middletemporal/ {print $3}' $optfn`
rsq1=`gawk '/ctx-middletemporal/ {print $4}' $optfn`
intc1=`gawk '/ctx-middletemporal/ {print $5}' $optfn`
n2=`gawk '/ctx-superiortemporal/ {print $2}' $optfn`
v2=`gawk '/ctx-superiortemporal/ {print $3}' $optfn`
rsq2=`gawk '/ctx-superiortemporal/ {print $4}' $optfn`
intc2=`gawk '/ctx-superiortemporal/ {print $5}' $optfn`
nv=$(echo "scale=8; $n1+$n2" | bc)
bp=$(echo "scale=8; $v1*$n1/$nv+$v2*$n2/$nv" | bc)
rsq=$(echo "scale=8; $rsq1*$n1/$nv+$rsq2*$n2/$nv" | bc)
intc=$(echo "scale=8; $intc1*$n1/$nv+$intc2*$n2/$nv" | bc)
printf "%-35s %11d %11.4f %11.4f %11.4f\n" TEMP_FS $nv $bp $rsq $intc >> $optfn
MC=$(echo "scale=8; $bp+$MC" | bc)
N=$(echo "scale=8; $nv+$N" | bc)

# OCC
n1=`gawk '/ctx-cuneus/ {print $2}' $optfn`
v1=`gawk '/ctx-cuneus/ {print $3}' $optfn`
rsq1=`gawk '/ctx-cuneus/ {print $4}' $optfn`
intc1=`gawk '/ctx-cuneus/ {print $5}' $optfn`
n2=`gawk '/ctx-lingual/ {print $2}' $optfn`
v2=`gawk '/ctx-lingual/ {print $3}' $optfn`
rsq2=`gawk '/ctx-lingual/ {print $4}' $optfn`
intc2=`gawk '/ctx-lingual/ {print $5}' $optfn`
nv=$(echo "scale=8; $n1+$n2" | bc)
bp=$(echo "scale=8; $v1*$n1/$nv+$v2*$n2/$nv" | bc)
rsq=$(echo "scale=8; $rsq1*$n1/$nv+$rsq2*$n2/$nv" | bc)
intc=$(echo "scale=8; $intc1*$n1/$nv+$intc2*$n2/$nv" | bc)
printf "%-35s %11d %11.4f %11.4f %11.4f\n" OCC_FS $nv $bp  $rsq $intc>> $optfn

# PREF
n1=`gawk '/ctx-rostralmiddlefrontal/ {print $2}' $optfn`
v1=`gawk '/ctx-rostralmiddlefrontal/ {print $3}' $optfn`
rsq1=`gawk '/ctx-rostralmiddlefrontal/ {print $4}' $optfn`
intc1=`gawk '/ctx-rostralmiddlefrontal/ {print $5}' $optfn`
n2=`gawk '/ctx-superiorfrontal/ {print $2}' $optfn`
v2=`gawk '/ctx-superiorfrontal/ {print $3}' $optfn`
rsq2=`gawk '/ctx-superiorfrontal/ {print $4}' $optfn`
intc2=`gawk '/ctx-superiorfrontal/ {print $5}' $optfn`
nv=$(echo "scale=8; $n1+$n2" | bc)
bp=$(echo "scale=8; $v1*$n1/$nv+$v2*$n2/$nv" | bc)
rsq=$(echo "scale=8; $rsq1*$n1/$nv+$rsq2*$n2/$nv" | bc)
intc=$(echo "scale=8; $intc1*$n1/$nv+$intc2*$n2/$nv" | bc)
printf "%-35s %11d %11.4f %11.4f %11.4f\n" PREF_FS $nv $bp $rsq $intc >> $optfn
MC=$(echo "scale=8; $bp+$MC" | bc)
N=$(echo "scale=8; $nv+$N" | bc)

# MC
nv=`gawk '/ctx-precuneus/ {print $2}' $optfn`
bp=`gawk '/ctx-precuneus/ {print $3}' $optfn`
MC=$(echo "scale=8; $bp+$MC" | bc)
N=$(echo "scale=8; $nv+$N" | bc)
MC=$(echo "scale=8; $MC/4" | bc)
printf "%-35s %11d %11.4f %11.4f %11.4f\n" MC $N $MC 0 0 >> $optfn


